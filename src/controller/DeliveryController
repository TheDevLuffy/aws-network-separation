const DeliveryService = require('../service/DeliveryService')
const logger = require('../logger')

const getDelivery = async (req, res) => {
  const { id } = req.query
  try {
    if (!id) {
      const deliveries = await DeliveryService.findAll()
      res.status(200).send(deliveries)
      return
    }
    const delivery = await DeliveryService.findById(id)
    res.status(200).send(delivery)
  } catch (error) {
    logger.error(error)
    res.status(500).send({
      message: '서버 에러'
    })
  }
}

const createDelivery = async (req, res) => {
  const { address, orderer, menu } = req.body
  try {
    const savedDelivery = await DeliveryService.save(address, orderer, menu)
    res.status(200).send(savedDelivery)
  } catch (error) {
    logger.error(error)
    res.status(500).send({
      message: '서버 에러'
    })
  }
}

const updateDelivery = async (req, res) => {
  const { id, address } = req.body
  try {
    const updatedDelivery = await DeliveryService.updateAddress(id, address)
    res.status(200).send(updatedDelivery)
  } catch (error) {
    res.status(404).send({
      message: "문제가 발생하였습니다."
    })
  }
}

const deleteDelivery = async (req, res) => {
  const { id } = req.body
  try {
    const deleteDelivery = await DeliveryService.destroy(id)
    res.status(200).send({
      message: "배달이 완료되었습니다.",
      deletedAt: deleteDelivery.deletedAt
    })
  } catch (error) {
    logger.error(error)
    res.status(404).send({
      message: "확인되지 않은 주문입니다."
    })
  }
}

module.exports = {
  getDelivery,
  createDelivery,
  updateDelivery,
  deleteDelivery
}